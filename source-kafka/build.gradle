plugins {
    id 'java'
    id 'java-library'
    id "com.github.johnrengelman.shadow"
}

tasks.withType(JavaCompile) {
    options.compilerArgs += '-Xlint:none'
}

configurations {
    producerV4Kafka
}

dependencies {
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation project(':common')
    api project(':source')

    implementation("com.github.ben-manes.caffeine:caffeine:${caffeineVersion}")
    implementation("io.vavr:vavr:${vavrVersion}")
    implementation("com.datastax.oss:java-driver-core:${ossDriverVersion}")
    implementation("com.datastax.oss:java-driver-query-builder:${ossDriverVersion}")

    implementation("com.google.guava:guava:${guavaVersion}")
    implementation("org.apache.kafka:connect-api:${kafkaVersion}")
    implementation("org.apache.kafka:connect-json:${kafkaVersion}")
    implementation("io.confluent:kafka-connect-avro-converter:${confluentVersion}")
    implementation("io.confluent:kafka-avro-serializer:${confluentVersion}")

    testImplementation "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "com.datastax.oss:java-driver-core:${ossDriverVersion}"
    testImplementation "com.datastax.oss:java-driver-query-builder:${ossDriverVersion}"
    testImplementation project(':testcontainers')
    testImplementation project(':producer-v4-kafka')

    testRuntime "org.slf4j:slf4j-api:1.7.30"
    testRuntime "org.slf4j:slf4j-simple:1.7.30"

    producerV4Kafka project(':producer-v4-kafka')
}

jar {
    manifest {
    }
    zip64=true
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

shadowJar {
    manifest {
        inheritFrom project.tasks.jar.manifest
    }
}

jar.enabled = false
assemble.dependsOn(shadowJar)

test {
    // Add dependency on jar task, since it will be main target for testing
    dependsOn project(':producer-v4-kafka').shadowJar
    dependsOn shadowJar

    // Rearrange test classpath, add compiled JAR instead of main classes
    classpath = project.sourceSets.test.output + configurations.testRuntimeClasspath + files(shadowJar.archiveFile)

    useJUnitPlatform()

    systemProperty "sourceBuildDir", buildDir
    systemProperty "producerBuildDir", project(':producer-v4-kafka').buildDir
    systemProperty "projectVersion", project.version
}

