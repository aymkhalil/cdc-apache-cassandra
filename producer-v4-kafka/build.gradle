plugins {
    id 'java'
    id 'application'
    id 'com.google.cloud.tools.jib'
    id "com.gorylenko.gradle-git-properties"
    id "com.github.johnrengelman.shadow"
}

application {
    mainClassName = "$mainClassName"
}

jar {
    manifest {
        attributes 'Premain-Class': "$mainClassName"
    }
    zip64=true
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

shadowJar {
    manifest {
        inheritFrom project.tasks.jar.manifest
    }
}

jar.enabled = false
assemble.dependsOn(shadowJar)

compileTestJava {
    options.compilerArgs += '-parameters'
}

dependencies {
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    api project(':producer-v4')

    // see https://docs.confluent.io/platform/current/installation/versions-interoperability.html
    implementation "org.apache.kafka:connect-api:${kafkaVersion}"
    implementation "org.apache.kafka:connect-json:${kafkaVersion}"
    implementation "io.confluent:kafka-avro-serializer:${confluentVersion}"
    implementation "io.confluent:kafka-connect-avro-converter:${confluentVersion}"

    implementation("io.debezium:debezium-core:${debeziumVersion}")
    compileOnly("org.apache.cassandra:cassandra-all:${cassandra4Version}")

    testImplementation "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "com.datastax.oss:java-driver-core:${ossDriverVersion}"
    testImplementation "com.datastax.oss:java-driver-query-builder:${ossDriverVersion}"
    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation "org.testcontainers:database-commons:${testContainersVersion}"
    testImplementation "org.testcontainers:cassandra:${testContainersVersion}"
    testImplementation "org.testcontainers:kafka:${testContainersVersion}"
    testImplementation project(':common-kafka')

    testRuntime "org.slf4j:slf4j-api:1.7.30"
    testRuntime "org.slf4j:slf4j-simple:1.7.30"
}

test {
    // Add dependency on jar task, since it will be main target for testing
    dependsOn shadowJar

    // Rearrange test classpath, add compiled JAR instead of main classes
    classpath = project.sourceSets.test.output + configurations.testRuntimeClasspath + files(shadowJar.archiveFile)

    useJUnitPlatform()

    systemProperty "buildDir", buildDir
    systemProperty "projectVersion", project.version
}



