plugins {
    id 'java'
    id 'java-library'
    id 'io.github.lhotari.gradle-nar-plugin'
    id 'com.palantir.docker'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += '-Xlint:none'
}

sourceSets {
    main.java.srcDir project(':connector-luna').sourceSets.main.java
    test.java.srcDir project(':connector-luna').sourceSets.test.java
    test.resources.srcDir project(':connector-luna').sourceSets.test.resources

    // Make the compileOnly dependencies available when compiling/running tests
    test.compileClasspath += configurations.compileClasspath
    test.runtimeClasspath += configurations.compileClasspath
}

dependencies {
    implementation project(':commons')
    implementation project(':commons-pulsar')
    implementation project(':connector')

    implementation("com.github.ben-manes.caffeine:caffeine:${caffeineVersion}")
    implementation("io.vavr:vavr:${vavrVersion}")
    implementation "com.datastax.oss:java-driver-core:${ossDriverVersion}"
    implementation "com.datastax.oss:java-driver-query-builder:${ossDriverVersion}"

    implementation("org.apache.avro:avro:${avroVersion}")

    compileOnly("${pulsarGroup}:pulsar-client:${pulsarVersion}")
    compileOnly("${pulsarGroup}:pulsar-io-common:${pulsarVersion}")
    compileOnly("${pulsarGroup}:pulsar-io-core:${pulsarVersion}")

    testRuntimeOnly("org.slf4j:slf4j-simple:${slf4jVersion}")
    testRuntimeOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation project(':testcontainers')

    nar "${pulsarGroup}:pulsar-io:${pulsarVersion}"
}

tasks.jar.dependsOn project(':commons').jar
jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    zip64=true
}

nar {
    archivesBaseName = 'pulsar-cassandra-source'
    manifest {
        attributes 'Nar-Group': 'com.datastax.oss'
        attributes 'Nar-Id': 'pulsar-io-cassandra-source-nar'
    }
}

assemble.dependsOn(nar)

test {
    // Add dependency on jar task, since it will be main target for testing
    dependsOn project(':agent-c4-pulsar').shadowJar
    dependsOn nar

    // Rearrange test classpath, add compiled JAR instead of main classes
    //classpath = project.sourceSets.test.output + configurations.testRuntimeClasspath + files(shadowJar.archiveFile)

    useJUnitPlatform()

    environment 'PULSAR_IMAGE', 'apachepulsar/pulsar:' + pulsarVersion
    environment 'CASSANDRA_IMAGE', 'cassandra:' + cassandra4Version

    systemProperty "connectorBuildDir", buildDir
    systemProperty "agentBuildDir", project(':agent-c4-pulsar').buildDir
    systemProperty "pulsarDistribution", "pulsar"
    systemProperty "projectVersion", project.version
}

docker {
    name "${dockerRepo}pulsar:${pulsarVersion}-csc"
    dependsOn nar
    files "$buildDir/libs/", "src/docker/"
    buildArgs([BUILD_VERSION: project.version, PULSAR_VERSION: pulsarVersion])
}
build.dependsOn(project.tasks['docker'])
