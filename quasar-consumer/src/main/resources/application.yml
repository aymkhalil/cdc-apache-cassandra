micronaut:
  application:
    name: quasarConsumer
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
        step: PT1M
        descriptions: false
  server:
    host: "${SERVER_HOST:`localhost`}"
    port: "${SERVER_PORT:8081}"
#    http-version: http_2_0
#  ssl:
#    build-self-signed: true
  caches:
    elasticache:
      maximum-size: 10
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
endpoints:
  all:
    host: "${SERVER_HOST:`localhost`}"
    port: "${ENDPOINTS_PORT:8085}"
  info:
    enabled: true
    sensitive: false
  env:
    enabled: true
    sensitive: false
  stop:
    enabled: true
    sensitive: false
  metrics:
    enabled: true
    sensitive: false
    binders:
      jvm:
        enabled: true
      web:
        enabled: true
      uptime:
        enabled: true
      processor:
        enabled: true
  prometheus:
    enabled: true
    sensitive: false
  health:
    cassandra:
      enabled: true
    elasticsearch:
      rest:
        high:
          level:
            enabled: false
---
quasar:
  ordinal: "${QUASAR_ORDINAL:0}"
  clusterName: "${QUASAR_CLUSTER_NAME:`Quasar`}"
  defaultDatacenter: "${CASSANDRA_DATACENTER:`datacenter1`}"
  consumerThreads: "${QUASAR_CONSUMER_THREAD:4}"
quasarcli:
  serviceName: "${QUASAR_SERVICE_NAME:`quasar`}"
  port: "${SERVER_PORT:8081}"
---
cassandra:
  default:
    basic:
     contact-points:
       - "${CASSANDRA_CONTACTPOINT:`localhost:9042`}"
     load-balancing-policy:
        local-datacenter: "${CASSANDRA_DATACENTER:`datacenter1`}"
    advanced:
      control-connection:
        schema-agreement:
          timeout: 30
      metadata:
        schema:
          enabled: true
---
elasticsearch:
  httpHosts: "${ELASTICSEARCH_HOSTS:`http://localhost:9200`}"
